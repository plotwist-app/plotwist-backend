{"version":3,"sources":["../../../src/db/schema/index.ts"],"sourcesContent":["import { randomUUID } from 'node:crypto'\n\nimport {\n  boolean,\n  index,\n  integer,\n  pgEnum,\n  pgTable,\n  primaryKey,\n  timestamp,\n  uuid,\n  varchar,\n} from 'drizzle-orm/pg-core'\nimport { relations } from 'drizzle-orm'\n\nexport const likeEntityEnum = pgEnum('like_entity', ['REVIEW', 'REPLY'])\n\nexport const listVisibilityEnum = pgEnum('list_visibility', [\n  'PUBLIC',\n  'NETWORK',\n  'PRIVATE',\n])\n\nexport const subscriptionTypeEnum = pgEnum('subscription_type', [\n  'MEMBER',\n  'PRO',\n])\n\nexport const languagesEnum = pgEnum('languages', [\n  'en-US',\n  'es-ES',\n  'fr-FR',\n  'it-IT',\n  'de-DE',\n  'pt-BR',\n  'ja-JP',\n])\n\nexport const mediaTypeEnum = pgEnum('media_type', ['TV_SHOW', 'MOVIE'])\n\nexport const followers = pgTable(\n  'followers',\n  {\n    followerId: uuid('follower_id')\n      .references(() => profiles.id, {\n        onDelete: 'cascade',\n      })\n      .notNull(),\n    followedId: uuid('followed_id')\n      .references(() => profiles.id, {\n        onDelete: 'cascade',\n      })\n      .notNull(),\n    createdAt: timestamp('createdAt').defaultNow().notNull(),\n  },\n  table => {\n    return {\n      pk: primaryKey({\n        columns: [table.followedId, table.followerId],\n      }),\n    }\n  }\n)\n\nexport const followersRelations = relations(followers, ({ one }) => ({\n  followerProfile: one(profiles, {\n    fields: [followers.followerId],\n    references: [profiles.id],\n  }),\n  followedProfile: one(profiles, {\n    fields: [followers.followedId],\n    references: [profiles.id],\n  }),\n}))\n\nexport const likes = pgTable('likes', {\n  id: uuid('id')\n    .$defaultFn(() => randomUUID())\n    .primaryKey(),\n  entityType: likeEntityEnum('entity_type').notNull(),\n  reviewId: uuid('review_id').references(() => reviews.id, {\n    onDelete: 'cascade',\n  }),\n  reviewReplyId: uuid('review_reply_id').references(() => reviewReplies.id, {\n    onDelete: 'cascade',\n  }),\n  profileId: uuid('profile_id')\n    .references(() => profiles.id, {\n      onDelete: 'cascade',\n    })\n    .notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n})\n\nexport const likesRelations = relations(likes, ({ one, many }) => ({\n  reviews: one(reviews, {\n    fields: [likes.reviewId],\n    references: [reviews.id],\n  }),\n  reviewReplies: one(reviewReplies, {\n    fields: [likes.reviewReplyId],\n    references: [reviewReplies.id],\n  }),\n  profile: one(profiles, {\n    fields: [likes.profileId],\n    references: [profiles.id],\n  }),\n}))\n\nexport const listItems = pgTable(\n  'list_items',\n  {\n    id: uuid('id').$defaultFn(() => randomUUID()),\n    listId: uuid('list_id')\n      .references(() => lists.id, { onDelete: 'cascade' })\n      .notNull(),\n    title: varchar('title'),\n    overview: varchar('overview'),\n    backdropPath: varchar('backdrop_path'),\n    posterPath: varchar('poster_path'),\n    tmdbId: integer('tmdb_id'),\n    mediaType: mediaTypeEnum('media_type'),\n    createdAt: timestamp('created_at').defaultNow().notNull(),\n  },\n  table => {\n    return {\n      pk: primaryKey({\n        columns: [table.id, table.listId],\n      }),\n    }\n  }\n)\n\nexport const listItemsRelations = relations(listItems, ({ one, many }) => ({\n  lists: one(lists, {\n    fields: [listItems.listId],\n    references: [lists.id],\n  }),\n}))\n\nexport const listLikes = pgTable('list_likes', {\n  id: uuid('id')\n    .$defaultFn(() => randomUUID())\n    .primaryKey(),\n  listId: uuid('list_id')\n    .references(() => lists.id, {\n      onDelete: 'cascade',\n    })\n    .notNull(),\n  profileId: uuid('profile_id')\n    .references(() => profiles.id, {\n      onDelete: 'cascade',\n    })\n    .notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n})\n\nexport const listLikesRelations = relations(listLikes, ({ one }) => ({\n  lists: one(lists, {\n    fields: [listLikes.listId],\n    references: [lists.id],\n  }),\n  profile: one(profiles, {\n    fields: [listLikes.profileId],\n    references: [profiles.id],\n  }),\n}))\n\nexport const lists = pgTable(\n  'lists',\n  {\n    id: uuid('id')\n      .$defaultFn(() => randomUUID())\n      .primaryKey(),\n    name: varchar('name'),\n    profileId: uuid('profile_id')\n      .references(() => profiles.id, {\n        onDelete: 'cascade',\n      })\n      .notNull(),\n    description: varchar('description'),\n    coverPath: varchar('cover_path'),\n    visibility: listVisibilityEnum('visibility').notNull(),\n    createdAt: timestamp('created_at').defaultNow().notNull(),\n  },\n  table => {\n    return {\n      profileId: index('profile_id_idx').on(table.profileId),\n    }\n  }\n)\n\nexport const listRelations = relations(lists, ({ one, many }) => ({\n  listItems: many(listItems),\n  listLikes: many(listLikes),\n  profiles: one(profiles, {\n    fields: [lists.profileId],\n    references: [profiles.id],\n  }),\n}))\n\nexport const profiles = pgTable(\n  'profiles',\n  {\n    id: uuid('id')\n      .$defaultFn(() => randomUUID())\n      .primaryKey(),\n    email: varchar('email').unique(),\n    username: varchar('username').unique().notNull(),\n    bannerPath: varchar('banner_path'),\n    subscriptionType: subscriptionTypeEnum('subscription_type'),\n    imagePath: varchar('image_path').notNull(),\n    createdAt: timestamp('created_at').defaultNow().notNull(),\n  },\n  table => {\n    return {\n      email: index('email_idx').on(table.email),\n      username: index('username_idx').on(table.username),\n    }\n  }\n)\n\nexport const profileRelations = relations(profiles, ({ one, many }) => ({\n  subscriptions: many(subscriptions),\n  likes: many(likes),\n  listLikes: many(listLikes),\n  lists: many(lists),\n  reviewReplies: many(reviewReplies),\n  reviews: many(reviews),\n  followers: many(followers),\n}))\n\nexport const reviewReplies = pgTable('review_replies', {\n  id: uuid('id')\n    .$defaultFn(() => randomUUID())\n    .primaryKey(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  profileId: uuid('profile_id')\n    .references(() => profiles.id, { onDelete: 'cascade' })\n    .notNull(),\n  reply: varchar('reply').notNull(),\n  reviewId: uuid('review_id')\n    .references(() => reviews.id, { onDelete: 'cascade' })\n    .notNull(),\n})\n\nexport const reviewsRepliesRelations = relations(\n  reviewReplies,\n  ({ one, many }) => ({\n    likes: many(likes),\n    profiles: one(profiles, {\n      fields: [reviewReplies.profileId],\n      references: [profiles.id],\n    }),\n    reviews: one(reviews, {\n      fields: [reviewReplies.reviewId],\n      references: [reviews.id],\n    }),\n  })\n)\n\nexport const reviews = pgTable('reviews', {\n  id: uuid('id')\n    .$defaultFn(() => randomUUID())\n    .primaryKey(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  profileId: uuid('profile_id')\n    .references(() => profiles.id, { onDelete: 'cascade' })\n    .notNull(),\n  tmdbId: integer('tmdb_id'),\n  mediaType: mediaTypeEnum('media_type'),\n  review: varchar('review'),\n  rating: integer('rating'),\n  hasSpoilers: boolean('has_spoilers'),\n  tmdbTitle: varchar('tmdb_title'),\n  tmdbPosterPath: varchar('tmdb_poster_path'),\n  tmdbOverview: varchar('tmdb_overview'),\n  language: languagesEnum('language'),\n})\n\nexport const reviewsRelations = relations(reviews, ({ one, many }) => ({\n  likes: many(likes),\n  profiles: one(profiles, {\n    fields: [reviews.profileId],\n    references: [profiles.id],\n  }),\n}))\n\nexport const subscriptions = pgTable('subscriptions', {\n  id: uuid('id')\n    .$defaultFn(() => randomUUID())\n    .primaryKey(),\n  profileId: uuid('profile_id')\n    .references(() => profiles.id, { onDelete: 'cascade' })\n    .notNull(),\n  type: subscriptionTypeEnum('type').notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n})\n\nexport const subscriptionsRelations = relations(subscriptions, ({ one }) => ({\n  profile: one(profiles, {\n    fields: [subscriptions.profileId],\n    references: [profiles.id],\n  }),\n}))\n"],"mappings":"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","names":[]}